arrange(desc(count))
return(ret_table)
}
test <- get_summary_table_google(apple_cleaned)
get_summary_table_google <- function(google_cleaned) {
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>% filter(!is.na(rating))
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>% filter(!is.na(Reviews))
ret_table <- google_cleaned %>%
group_by(Category) %>%
summarise(
avg_rating = mean(as.numeric(rating), na.rm = TRUE),
avg_price = mean(as.numeric(gsub("[$]", "", price)),
na.rm = TRUE
),
count = length(Category)
) %>%
arrange(desc(count))
return(ret_table)
}
test <- get_summary_table_google(apple_cleaned)
get_summary_table_google <- function(google_cleaned) {
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>% filter(!is.na(Rating))
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>% filter(!is.na(Reviews))
ret_table <- google_cleaned %>%
group_by(Category) %>%
summarise(
avg_rating = mean(as.numeric(Rating), na.rm = TRUE),
avg_price = mean(as.numeric(gsub("[$]", "", price)),
na.rm = TRUE
),
count = length(Category)
) %>%
arrange(desc(count))
return(ret_table)
}
test <- get_summary_table_google(google_cleaned)
get_summary_table_apple <- function(apple_df) {
ret_table2 <- apple_df %>%
group_by(prime_genre) %>%
summarise(
avg_rating = mean(as.numeric(user_rating), na.rm = TRUE),
avg_price = mean(price, na.rm = TRUE),
count = length(prime_genre)
) %>%
arrange(desc(count))
return(ret_table)
}
test2 <- get_summary_table_apple(apple_cleaned)
get_summary_table_apple <- function(apple_df) {
ret_table <- apple_df %>%
group_by(prime_genre) %>%
summarise(
avg_rating = mean(as.numeric(user_rating), na.rm = TRUE),
avg_price = mean(price, na.rm = TRUE),
count = length(prime_genre)
) %>%
arrange(desc(count))
return(ret_table)
}
test2 <- get_summary_table_apple(apple_cleaned)
View(test)
View(test2)
library(dplyr)
library(stringr)
library(lintr)
library(styler)
source("./Data/app_cleaned.R")
source("./Data/google_cleaned.R")
get_summary_table_google <- function(google_cleaned) {
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>% filter(!is.na(Rating))
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>% filter(!is.na(Reviews))
ret_table <- google_cleaned %>%
group_by(Category) %>%
summarise(
avg_rating = mean(as.numeric(Rating), na.rm = TRUE),
avg_price = mean(as.numeric(gsub("[$]", "", price)),
na.rm = TRUE
),
count = length(Category)
) %>%
arrange(desc(count))
return(ret_table)
}
test <- get_summary_table_google(google_cleaned)
get_summary_table_apple <- function(apple_df) {
ret_table <- apple_df %>%
group_by(prime_genre) %>%
summarise(
avg_rating = mean(as.numeric(user_rating), na.rm = TRUE),
avg_price = mean(price, na.rm = TRUE),
count = length(prime_genre)
) %>%
arrange(desc(count))
return(ret_table)
}
test <- get_summary_table_google(google_cleaned)
get_summary_table_apple <- function(apple_df) {
ret_table <- apple_df %>%
group_by(prime_genre) %>%
summarise(
avg_rating = mean(as.numeric(user_rating), na.rm = TRUE),
avg_price = mean(price, na.rm = TRUE),
count = length(prime_genre)
) %>%
arrange(desc(count))
return(ret_table)
}
get_summary_table_google <- function(google_cleaned) {
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>% filter(!is.na(Rating))
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>% filter(!is.na(Reviews))
ret_table <- google_cleaned %>%
group_by(Category) %>%
summarise(
avg_rating = mean(as.numeric(Rating), na.rm = TRUE),
avg_price = mean(as.numeric(gsub("[$]", "", price)),
na.rm = TRUE
),
count = length(Category)
) %>%
arrange(desc(count))
return(ret_table)
}
test <- get_summary_table_google(google_cleaned)
source("./Data/app_cleaned.R")
source("./Data/google_cleaned.R")
get_summary_table_google <- function(google_cleaned) {
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>% filter(!is.na(Rating))
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>% filter(!is.na(Reviews))
ret_table <- google_cleaned %>%
group_by(Category) %>%
summarise(
avg_rating = mean(as.numeric(Rating), na.rm = TRUE),
avg_price = mean(as.numeric(gsub("[$]", "", price)),
na.rm = TRUE
),
count = length(Category)
) %>%
arrange(desc(count))
return(ret_table)
}
google_initial <- read.csv("./data/Google-Playstore-Full.csv",
stringsAsFactors = FALSE
)
library(dplyr)
library(stringr)
google_initial <- read.csv("./data/Google-Playstore-Full.csv",
stringsAsFactors = FALSE
)
google_cleaned <- google_initial %>%
select(c(Category, Rating, Reviews, Installs, Size, Price, Content.Rating))
google_cleaned <- google_cleaned %>%
filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>%
filter(!is.na(Rating))
google_cleaned <- google_cleaned %>%
filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>%
filter(!is.na(Reviews))
google_cleaned <- google_cleaned %>%
mutate(
price = as.numeric(gsub("[$]", "", Price)),
installs = as.numeric(gsub("[+]", "", str_replace_all
(Installs, "[[:punct:]]", "")))
)
google_cleaned <- google_cleaned %>%
select(-c(Price, Installs))
google_cleaned <- google_cleaned %>%
filter(Size != "Varies with device")
google_initial <- read.csv("./data/Google-Playstore-Full.csv",
stringsAsFactors = FALSE
)
google_cleaned <- google_initial %>%
select(c(Category, Rating, Reviews, Installs, Size, Price, Content.Rating))
google_cleaned <- google_cleaned %>%
filter(!is.na(as.numeric(Rating)))
View(google_cleaned)
google_cleaned %>% filter(as.numeric(Rating))
google_cleaned %>% filter(is.na(Rating))
View(google_cleaned %>% filter(is.na(Rating)))
google_cleaned <- google_cleaned %>%
filter(!is.na(Rating))
google_cleaned <- google_cleaned %>%
filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>%
filter(!is.na(Reviews))
google_cleaned <- google_cleaned %>%
mutate(
price = as.numeric(gsub("[$]", "", Price)),
installs = as.numeric(gsub("[+]", "", str_replace_all
(Installs, "[[:punct:]]", "")))
)
google_cleaned <- google_cleaned %>%
select(-c(Price, Installs))
google_cleaned <- google_cleaned %>%
filter(Size != "Varies with device")
source("scripts/sum_table.R")
knitr::opts_chunk$set(echo = TRUE)
source("scripts/sum_table.R")
```{r echo = F, include=FALSE}
library(knitr)
library(lintr)
library(styler)
source("./Data/app_cleaned.R")
source("./Data/google_cleaned.R")
get_summary_table_google <- function(google_cleaned) {
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>% filter(!is.na(Rating))
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>% filter(!is.na(Reviews))
ret_table <- google_cleaned %>%
group_by(Category) %>%
summarise(
avg_rating = mean(as.numeric(Rating), na.rm = TRUE),
avg_price = mean(as.numeric(gsub("[$]", "", price)),
na.rm = TRUE
),
count = length(Category)
) %>%
arrange(desc(count))
return(ret_table)
}
test <- get_summary_table_google(google_cleaned)
get_summary_table_apple <- function(apple_df) {
ret_table <- apple_df %>%
group_by(prime_genre) %>%
summarise(
avg_rating = mean(as.numeric(user_rating), na.rm = TRUE),
avg_price = mean(price, na.rm = TRUE),
count = length(prime_genre)
) %>%
arrange(desc(count))
return(ret_table)
}
test2 <- get_summary_table_apple(apple_cleaned)
knitr::opts_chunk$set(echo = TRUE)
source("scripts/sum_table.R")
library(knitr)
install.packages("kab")
install.packages("kable")
library(kable)
knitr::opts_chunk$set(echo = TRUE)
source("scripts/sum_table.R")
library(knitr)
library(kab)
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
library(knitr)
View(test)
library(dplyr)
library(tidyr)
library(ggplot2)
source("./scripts/sum_table.R")
View(test)
View(google_cleaned)
ggplot(test, aes(x="", y= Category , fill=count)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
additional_plot <- ggplot(
data = test,
aes(x = Category, y = count)
) +
ggtitle("Amount of applications per category") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = Category, y = count + 6, label = count),
size = 2
)
ggplot(
data = test,
aes(x = Category, y = count)
) +
ggtitle("Amount of applications per category") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = Category, y = count + 6, label = count),
size = 2
)
ggplot(
data = test,
aes(x = Category, y = count)
) +
ggtitle("Amount of applications per category") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = Category, y = count + 6000, label = count),
size = 2
)
ggplot(
data = test,
aes(x = Category, y = count)
) +
ggtitle("Amount of applications per category") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = Category, y = count + 2000, label = count),
size = 2
)
ggplot(
data = test,
aes(x = Category, y = count)
) +
ggtitle("Amount of applications per category") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = Category, y = count + 1000, label = count),
size = 1.5
)
google_cleaned <- google_cleaned %>%
filter(Category == "TRAVEL")
View(test2)
plot_one_apple <- ggplot(
data = test2,
aes(x = prime_genre, y = count)
) +
ggtitle("Amount of applications per category (Apple Store)") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = prime_genre, y = count + 1000, label = count),
size = 1.5
)
figure_one <- ggarrange(plot_one_google, plot_one_apple,
labels = c("Google", "Apple"),
ncol = 2, nrow = 2)
warning()
warnings()
figure_one <- ggarrange(plot_one_google, plot_one_apple,
labels = c("Google", "Apple"),
ncol = 2, nrow = 2)
figure_one <- ggarrange(plot_one_google, plot_one_apple,
labels = c("Google", "Apple"),
ncol = 2, nrow = 2)
install.packages("ggpubr")
library(ggpubr)
figure_one <- ggarrange(plot_one_google, plot_one_apple,
labels = c("Google", "Apple"),
ncol = 2, nrow = 2)
plot_one_google <- ggplot(
data = test,
aes(x = Category, y = count)
) +
ggtitle("Amount of applications per category (Google Play)") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = Category, y = count + 1000, label = count),
size = 1.5
)
plot_one_apple <- ggplot(
data = test2,
aes(x = prime_genre, y = count)
) +
ggtitle("Amount of applications per category (Apple Store)") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = prime_genre, y = count + 100, label = count),
size = 2
)
figure_one <- ggarrange(plot_one_google, plot_one_apple,
labels = c("Google", "Apple"),
ncol = 2, nrow = 2)
ggplot(test, aes(x=avg_rating, y=avg_price)) +
geom_point(size=2, shape=23)
ggplot(test, aes(x=avg_rating, y=avg_price)) +
geom_point(size=2, shape=1)
ggplot(test, aes(x=avg_rating, y=avg_price)) +
geom_point(size=2, shape=2)
ggplot(test, aes(x=avg_rating, y=avg_price)) +
geom_point(size=2, shape=20)
library(plotly)
install.packages(gapminder)
install.packages("gapminder")
library(gapminder)
fig <- plot_ly(
test, x = ~avg_rating, y = ~avg_price,
# Hover text:
text = ~paste("Average rating: ", avg_rating, '$<br>Average price:', avg_price),
color = ~avg_price, size = ~avg_price
)
fig
fig <- plot_ly(
test, x = ~avg_rating, y = ~avg_price,
# Hover text:
text = ~paste("Average rating: ", avg_rating, '<br>Average price:', avg_price),
color = ~avg_price, size = ~avg_price
)
fig <- plot_ly(
test, x = ~avg_rating, y = ~avg_price,
# Hover text:
text = ~paste("Average rating: ", avg_rating, '<br>Average price:', avg_price),
color = ~avg_price, size = ~avg_price
)
fig
fig <- plot_ly(
test, x = ~avg_rating, y = ~avg_price,
# Hover text:
text = ~paste('Category: ' , Category, '<br>Average rating: ', avg_rating, '<br>Average price:', avg_price),
color = ~avg_price, size = ~avg_price
)
fig
plot_two_apple <- plot_ly(
test2, x = ~avg_rating, y = ~avg_price,
# Hover text:
text = ~paste('Category: ' , prime_genre, '<br>Average rating: ', avg_rating, '<br>Average price:', avg_price),
color = ~avg_price, size = ~avg_price
)
plot_two_apple
plot_two_apple <- plot_ly(
test2, x = ~avg_rating, y = ~avg_price,
# Hover text:
text = ~paste('Category: ' , prime_genre, '<br>Average rating: ', avg_rating, '<br>Average price:', avg_price, '<br>Total number of applications: ', count),
color = ~avg_price, size = ~avg_price
)
plot_two_apple
plot_two_google <- plot_ly(
title = "Google",
test, x = ~avg_rating, y = ~avg_price,
# Hover text:
text = ~paste('Category: ' , Category, '<br>Average rating: ', avg_rating, '<br>Average price:', avg_price, '<br>Total number of applications: ', count),
color = ~avg_price, size = ~avg_price
)
plot_two_google
plot_two_google <- plot_ly(
test, x = ~avg_rating, y = ~avg_price,
title = "Google",
# Hover text:
text = ~paste('Category: ' , Category, '<br>Average rating: ', avg_rating, '<br>Average price:', avg_price, '<br>Total number of applications: ', count),
color = ~avg_price, size = ~avg_price
)
plot_two_google
plot_two_google <- plot_two_google %>% layout(title 'Hi')
plot_two_google <- plot_two_google %>% layout(title = 'Hi')
plot_two_google
style_file("scripts/chart_one.R")
style_file("scripts/chart_one.R")
lintr:::addin_lint()
lintr:::addin_lint()
style_file("scripts/chart_two.R")
lintr:::addin_lint()

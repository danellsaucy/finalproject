select(c(Category, Rating, Reviews, Installs, Size, Price, Content.Rating))
google_cleaned <- google_cleaned %>%
filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>%
filter(!is.na(Rating))
google_cleaned <- google_cleaned %>%
filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>%
filter(!is.na(Reviews))
google_cleaned <- google_cleaned %>%
mutate(
price = as.numeric(gsub("[$]", "", Price)),
installs = as.numeric(gsub("[+]", "", str_replace_all
(Installs, "[[:punct:]]", "")))
)
google_cleaned <- google_cleaned %>%
select(-c(Price, Installs))
google_cleaned <- google_cleaned %>%
filter(Size != "Varies with device")
google_cleaned <- google_cleaned %>%
filter(Category != "TRAVEL")
google_cleaned <- google_cleaned %>%
filter(Content.Rating != "Unrated")
google_cleaned <- google_cleaned %>%
mutate(new_content = ifelse(Content.Rating == "Everyone", 4,
ifelse(Content.Rating == "Everyone 10+", 9,
ifelse(Content.Rating == "Teen", 12,
ifelse(Content.Rating == "Mature 17+" | Content.Rating == "Adults only 18+", 17, 0)))))
count_goo_educ <- google_cleaned %>%
filter(Category == "EDUCATION") %>%
nrow()
highest_rating_goog <- google_cleaned %>%
filter(Category == "BOOKS_AND_REFERENCE") %>%
select(Rating) %>%
summarise(max = max(Rating)) %>%
as.numeric()
highest_rating_goog <- google_cleaned %>%
filter(Category == "BOOKS_AND_REFERENCE") %>%
select(Rating) %>%
mean(na.rm = TRUE)
highest_rating_goog <- google_cleaned %>%
filter(Category == "BOOKS_AND_REFERENCE") %>%
select(Rating) %>%
highest_rating_goog <- google_cleaned %>%
filter(Category == "BOOKS_AND_REFERENCE") %>%
select(Rating)
highest_rating_goog <- google_cleaned %>% filter(Category == "BOOKS_AND_REFERENCE") %>% pull(Rating) %>% mean(na.rm = TRUE)
highest_rating_goog <- google_cleaned %>% filter(Category == "BOOKS_AND_REFERENCE") %>% pull(Rating)
highest_rating_goog <- google_cleaned %>% filter(Category == "BOOKS_AND_REFERENCE") %>% pull(Rating) %>% mean(as.numeric(), na.rm = TRUE)
highest_rating_goog <- google_cleaned %>% filter(Category == "BOOKS_AND_REFERENCE") %>% pull(as.numeric(Rating)) %>% mean(na.rm = TRUE)
highest_rating_goog <- google_cleaned %>% filter(Category == "BOOKS_AND_REFERENCE") %>% pull(as.numeric(Rating))
View(highest_rating_goog)
highest_rating_goog <- google_cleaned %>% filter(Category == "BOOKS_AND_REFERENCE") %>% pull(as.numeric(Rating)) %>% as.numeric()
highest_rating_goog <- google_cleaned %>% filter(Category == "BOOKS_AND_REFERENCE") %>% pull(as.numeric(Rating)) %>% as.numeric() %>% mean(na.rm = TRUE)
highest_rating_goog <- google_cleaned %>% filter(Category == "BOOKS_AND_REFERENCE") %>% pull(as.numeric(Rating)) %>% as.numeric() %>% mean(na.rm = TRUE) %>% round(digits = 2)
View(google_cleaned)
count_goog <- google_cleaned %>% group_by(Category) %>%
summarise(count = length(Category), money_made = sum(price, na.rm = TRUE))
View(count_goog)
count_goog <- google_cleaned %>% group_by(Category) %>%
summarise(count = length(Category), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
View(count_goog)
most_apps_google <- summary_google[1,1]
summary_google <- google_cleaned %>% group_by(Category) %>%
summarise(count = length(Category), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
most_apps_google <- summary_google[1,1]
View(most_apps_google)
most_apps_google
most_apps_google <- as.character(summary_google[1,1])
most_apps_google <- as.character(summary_google[1,1])
count_apps_google <- as.numeric(summary_google[1,2])
money_made_google <- as.numeric(summary_google[1,3])
View(apple_initial)
View(apple_cleaned)
summary_apple <- apple_cleaned %>% group_by(prime_genre) %>%
summarise(count = length(prime_genre), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
most_apps_apple <- as.character(summary_apple[1,1])
count_apps_apple <- as.numeric(summary_apple[1,2])
money_made_apple <- as.numeric(summary_apple[1,3])
summary_google <- google_cleaned %>% group_by(Category) %>%
summarise(count = length(Category), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
most_apps_google <- as.character(summary_google[1,1])
count_apps_google <- as.numeric(summary_google[1,2])
money_made_google <- as.numeric(summary_google[1,3])
library(dplyr)
library(stringr)
google_initial <- read.csv("./data/Google-Playstore-Full.csv",
stringsAsFactors = FALSE
)
google_cleaned <- google_initial %>%
select(c(Category, Rating, Reviews, Installs, Size, Price, Content.Rating))
google_cleaned <- google_cleaned %>%
filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>%
filter(!is.na(Rating))
google_cleaned <- google_cleaned %>%
filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>%
filter(!is.na(Reviews))
google_cleaned <- google_cleaned %>%
mutate(
price = as.numeric(gsub("[$]", "", Price)),
installs = as.numeric(gsub("[+]", "", str_replace_all
(Installs, "[[:punct:]]", "")))
)
google_cleaned <- google_cleaned %>%
select(-c(Price, Installs))
google_cleaned <- google_cleaned %>%
filter(Size != "Varies with device")
google_cleaned <- google_cleaned %>%
filter(Category != "TRAVEL")
google_cleaned <- google_cleaned %>%
filter(Content.Rating != "Unrated")
google_cleaned <- google_cleaned %>%
mutate(new_content = ifelse(Content.Rating == "Everyone", 4,
ifelse(Content.Rating == "Everyone 10+", 9,
ifelse(Content.Rating == "Teen", 12,
ifelse(Content.Rating == "Mature 17+" | Content.Rating == "Adults only 18+", 17, 0)))))
summary_google <- google_cleaned %>% group_by(Category) %>%
summarise(count = length(Category), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
most_apps_google <- as.character(summary_google[1,1])
count_apps_google <- as.numeric(summary_google[1,2])
money_made_google <- as.numeric(summary_google[1,3])
highest_rating_goog <- google_cleaned %>%
filter(Category == "BOOKS_AND_REFERENCE") %>%
pull(as.numeric(Rating)) %>%
as.numeric() %>%
mean(na.rm = TRUE) %>%
round(digits = 2)
count_apps_google <- summary_google[1,2]
View(count_apps_google)
View(google_cleaned)
unique(google_cleaned[,1])
length(unique(google_cleaned[,1]))
library(dplyr)
apple_initial <- read.csv("./data/AppleStore.csv", stringsAsFactors = FALSE)
apple_cleaned <- apple_initial %>%
select(c(
size_bytes, price,
rating_count_tot, user_rating,
cont_rating, prime_genre
))
apple_cleaned <- apple_cleaned %>%
mutate(new_content_rating = as.numeric(gsub("[+]", "", cont_rating)))
apple_cleaned <- apple_cleaned %>%
select(-c(cont_rating))
highest_rating_app <- apple_cleaned %>%
filter(prime_genre == "Productivity") %>%
select(user_rating) %>%
summarise(max = max(user_rating)) %>%
as.numeric()
View(apple_initial)
View(apple_cleaned)
# For App Store
# A function that takes in a dataset and returns a list of info about it:
get_summary_info <- function(apple_cleaned) {
ret <- list()
summary_apple <- apple_cleaned %>% group_by(prime_genre) %>%
summarise(count = length(prime_genre), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
ret$category <- as.character(summary_apple[1,1])
ret$count <- summary_apple[1,2]
ret$money_made <- summary_apple[1,3]
ret$unique_categories <- length(unique(apple_cleaned[,4]))
return(ret)
}
library(dplyr)
source("scripts/app_cleaned.R")
get_summary_info <- function(apple_cleaned) {
ret <- list()
summary_apple <- apple_cleaned %>% group_by(prime_genre) %>%
summarise(count = length(prime_genre), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
ret$category <- as.character(summary_apple[1,1])
ret$count <- summary_apple[1,2]
ret$money_made <- summary_apple[1,3]
ret$unique_categories <- length(unique(apple_cleaned[,4]))
return(ret)
}
get_summary_info(apple_cleaned)
get_summary_info <- function(apple_cleaned) {
summary_apple <- apple_cleaned %>% group_by(prime_genre) %>%
summarise(count = length(prime_genre), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
ret_category <- as.character(summary_apple[1,1])
ret_count <- summary_apple[1,2]
ret_money_made <- summary_apple[1,3]
ret_unique_categories <- length(unique(apple_cleaned[,4]))
ret <- list(ret_category, ret_count, ret_money_made, ret_unique_categories)
return(ret)
}
get_summary_info(apple_cleaned)
unique(apple_cleaned[,4])
unique(apple_cleaned[,5])
unique(apple_cleaned[,6])
summary_apple <- apple_cleaned %>% group_by(prime_genre) %>%
summarise(count = length(prime_genre), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
View(summary_apple)
get_summary_info <- function(apple_cleaned) {
summary_apple <- apple_cleaned %>% group_by(prime_genre) %>%
summarise(count = length(prime_genre), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
ret_category <- as.character(summary_apple[1,1])
ret_count <- summary_apple[1,2]
ret_money_made <- summary_apple[1,3]
ret_unique_categories <- length(unique(apple_cleaned[,4]))
ret_least_cat <- as.character(summary_apple[23,1])
ret_least_count <- summary_apple[23,2]
ret_least_money <- summary_apple[23,3]
ret <- list(ret_category, ret_count, ret_money_made, ret_unique_categories, ret_least_cat, ret_least_count, ret_least_money)
return(ret)
}
get_summary_info(apple_cleaned)
library(dplyr)
source("scripts/app_cleaned.R")
get_summary_info <- function(apple_cleaned) {
summary_apple <- apple_cleaned %>% group_by(prime_genre) %>%
summarise(count = length(prime_genre), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
ret_category <- as.character(summary_apple[1,1])
ret_count <- summary_apple[1,2]
ret_money_made <- summary_apple[1,3]
ret_unique_categories <- length(unique(apple_cleaned[,4]))
ret_least_cat <- as.character(summary_apple[23,1])
ret_least_count <- summary_apple[23,2]
ret_least_money <- summary_apple[23,3]
ret <- list(ret_category, ret_count, ret_money_made,
ret_unique_categories, ret_least_cat, ret_least_count, ret_least_money)
return(ret)
}
apple_list <- get_summary_info(apple_cleaned)
apple_list[1]
apple_list[2]
apple_list[3]
apple_list[4]
apple_list[5]
library(dplyr)
source("scripts/app_cleaned.R")
library(dplyr)
source("scripts/google_cleaned.R")
View(google_cleaned)
summary_google <- google_cleaned %>% group_by(Category) %>%
summarise(count = length(Category), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
View(summary_google)
View(summary_google)
View(google_cleaned)
source("scripts/app_cleaned.R")
get_summary_info_apple <- function(apple_cleaned) {
summary_apple <- apple_cleaned %>% group_by(prime_genre) %>%
summarise(count = length(prime_genre), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
ret_category <- as.character(summary_apple[1,1])
ret_count <- summary_apple[1,2]
ret_money_made <- summary_apple[1,3]
ret_unique_categories <- length(unique(apple_cleaned[,4]))
ret_least_cat <- as.character(summary_apple[23,1])
ret_least_count <- summary_apple[23,2]
ret_least_money <- summary_apple[23,3]
ret <- list(ret_category, ret_count, ret_money_made,
ret_unique_categories, ret_least_cat, ret_least_count, ret_least_money)
return(ret)
}
apple_list <- get_summary_info(apple_cleaned)
get_summary_info_google <- function(dataset) {
summary_google <- google_cleaned %>% group_by(Category) %>%
summarise(count = length(Category), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
ret_category <- as.character(summary_google[1,1])
ret_count <- summary_google[1,2]
ret_money_made <- summary_google[1,3]
ret_unique_categories <- length(unique(google_cleaned[,1]))
ret_least_cat <- as.character(summary_apple[49,1])
ret_least_count <- summary_apple[49,2]
ret_least_money <- summary_apple[49,3]
ret <- list(ret_category, ret_count, ret_money_made,
ret_unique_categories, ret_least_cat, ret_least_count, ret_least_money)
return(ret)
return(ret)
}
get_summary_info_google(google_cleaned)
View(summary_google)
get_summary_info_google <- function(dataset) {
summary_google <- google_cleaned %>% group_by(Category) %>%
summarise(count = length(Category), money_made = sum(price, na.rm = TRUE)) %>%
arrange(desc(count))
ret_category <- as.character(summary_google[1,1])
ret_count <- summary_google[1,2]
ret_money_made <- summary_google[1,3]
ret_unique_categories <- length(unique(google_cleaned[,1]))
ret_least_cat <- as.character(summary_google[49,1])
ret_least_count <- summary_google[49,2]
ret_least_money <- summary_google[49,3]
ret <- list(ret_category, ret_count, ret_money_made,
ret_unique_categories, ret_least_cat, ret_least_count, ret_least_money)
return(ret)
return(ret)
}
get_summary_info_google(google_cleaned)
## Table of Aggregated Data
For both app stores we have aggregated the individual apps in each data set into their corresponding categories. Then we calculated the average rating, average price, and number of applications in those categories. We created two summary tables one for each app store, allowing us to compare and dictate which type of apps are more successful in the different app stores.
library(dplyr)
library(stringr)
library(lintr)
library(styler)
source("./scripts/app_cleaned.R")
source("./scripts/google_cleaned.R")
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>% filter(!is.na(Rating))
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>% filter(!is.na(Reviews))
ret_table <- google_cleaned %>%
group_by(Category) %>%
summarise(
avg_rating = round(mean(as.numeric(Rating), na.rm = TRUE), digits = 2),
overall_avg_price = round(mean(as.numeric(gsub("[$]", "", price)), na.rm = TRUE),
digits = 2
),
paid_avg_price = round(mean(replace(price, price==0, NA), na.rm = TRUE), digits = 2),
count = length(Category)
) %>%
arrange(desc(count))
return(ret_table)
get_summary_table_google <- function(google_cleaned) {
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>% filter(!is.na(Rating))
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>% filter(!is.na(Reviews))
ret_table <- google_cleaned %>%
group_by(Category) %>%
summarise(
avg_rating = round(mean(as.numeric(Rating), na.rm = TRUE), digits = 2),
overall_avg_price = round(mean(as.numeric(gsub("[$]", "", price)), na.rm = TRUE),
digits = 2
),
paid_avg_price = round(mean(replace(price, price==0, NA), na.rm = TRUE), digits = 2),
count = length(Category)
) %>%
arrange(desc(count))
return(ret_table)
}
get_summary_table_google <- function(google_cleaned) {
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Rating)))
google_cleaned <- google_cleaned %>% filter(!is.na(Rating))
google_cleaned <- google_cleaned %>% filter(!is.na(as.numeric(Reviews)))
google_cleaned <- google_cleaned %>% filter(!is.na(Reviews))
ret_table <- google_cleaned %>%
group_by(Category) %>%
summarise(
avg_rating = round(mean(as.numeric(Rating), na.rm = TRUE), digits = 2),
overall_avg_price = round(mean(as.numeric(gsub("[$]", "", price)), na.rm = TRUE),
digits = 2
),
paid_avg_price = round(mean(replace(price, price==0, NA), na.rm = TRUE), digits = 2),
count = length(Category)
) %>%
arrange(desc(count))
return(ret_table)
}
google_table <- get_summary_table_google(google_cleaned)
get_summary_table_apple <- function(apple_df) {
ret_table <- apple_df %>%
group_by(prime_genre) %>%
summarise(
avg_rating = round(mean(as.numeric(user_rating), na.rm = TRUE),
digits = 2
),
overall_avg_price = round(mean(price, na.rm = TRUE), digits = 2),
paid_avg_price = round(mean(replace(price, price==0, NA), na.rm = TRUE), digits = 2),
count = length(prime_genre)
) %>%
arrange(desc(count))
return(ret_table)
}
apple_table <- get_summary_table_apple(apple_cleaned)
View(google_table)
View(google_table)
View(apple_table)
style_file("scripts/app_cleaned.R")
lintr:::addin_lint()
lintr:::addin_lint()
style_file("scripts/app_cleaned.R")
lintr:::addin_lint()
style_file("scripts/appStoreFunc.R")
lintr:::addin_lint()
style_file("scripts/appStoreFunc.R")
lintr:::addin_lint()
style_file("scripts/chart_one.R")
lintr:::addin_lint()
style_file("scripts/chart_two.R")
lintr:::addin_lint()
style_file("scripts/chart_three.R")
lintr:::addin_lint()
style_file("scripts/chart_three.R")
lintr:::addin_lint()
style_file("scripts/chart_three.R")
lintr:::addin_lint()
style_file("scripts/google_cleaned.R")
lintr:::addin_lint()
style_file("scripts/google_cleaned.R")
lintr:::addin_lint()
style_file("scripts/googlePlayFunc.R
style_file("scripts/googlePlayFunc.R)
style_file("scripts/googlePlayFunc.R:)
style_file("scripts/googlePlayFunc.R")
lintr:::addin_lint()
style_file("scripts/googlePlayFunc.R")
lintr:::addin_lint()
style_file("scripts/sum_table.R"0
style_file("scripts/sum_table.R")
lintr:::addin_lint()
style_file("scripts/sum_table.R")
lintr:::addin_lint()
plot_one_google <- ggplot(
data = google_table,
aes(fill = count, x = Category, y = count)
) +
ggtitle("Amount of applications per category (Google Play)") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = Category, y = count + 1000, label = count),
size = 1.5
)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggpubr)
source("./scripts/sum_table.R")
plot_one_google <- ggplot(
data = google_table,
aes(fill = count, x = Category, y = count)
) +
ggtitle("Amount of applications per category (Google Play)") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = Category, y = count + 1000, label = count),
size = 1.5
)
plot_one_apple <- ggplot(
data = apple_table,
aes(fill = count , x = prime_genre, y = count)
) +
ggtitle("Amount of applications per category (Apple Store)") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = prime_genre, y = count + 100, label = count),
size = 2
)
figure_one <- ggarrange(plot_one_google, plot_one_apple,
labels = c("Google", "Apple"),
ncol = 2, nrow = 2
)
View(plot_one_apple)
plot_one_apple
plot_one_google
style_file("scripts/chart_one.R")
lintr:::addin_lint()
style_file("scripts/chart_two.R")
lintr:::addin_lint()
style_file("scripts/chart_two.R")
lintr:::addin_lint()
lintr:::addin_lint()
style_file("scripts/chart_two.R")
lintr:::addin_lint()
style_file("scripts/chart_three.R")
lintr:::addin_lint()
style_file("scripts/chart_three.R")
lintr:::addin_lint()
style_file("scripts/chart_two.R")
lintr:::addin_lint()
style_file("scripts/chart_one.R")
lintr:::addin_lint()
style_file("scripts/app_cleaned.R")
lintr:::addin_lint()
style_file("scripts/appStoreFunc.R")
lintr:::addin_lint()
style_file("scripts/google_cleaned.R")
lintr:::addin_lint()
style_file("scripts/googlePlayFunc.R")
lintr:::addin_lint()
style_file("scripts/sum_table.R")
lintr:::addin_lint()
